#!/usr/local/bin/clisp
; vim: lisp:syntax=lisp:ts=4 sw=4 sts=4 expandtab:cindent:formatoptions+=cro 

(defmacro if-it (test then &optional else)
  `(let ((it ,test))
     (if it ,then ,else)))

(defmacro when-it (test &rest then)
  `(let ((it ,test))
     (if it (progn ,@then))))

(defun str->lst (str &optional 
                     (sep #\,) (start 0) 
                     (fn #'read-from-string))
 "Seperate str into a list, seperated on sep. Filter thru fn"
 (labels 
    ((worker (&optional (start 0))
       (if-it (position sep str :start start)
              (cons (subseq str start it) 
                    (worker (1+ it)))
              (list (subseq str start)))))
    (mapcar fn (worker))))

(defun file->lines (&optional f)
 "Return one item per line in file f. "
 (if-it (read-line f nil)
        (cons it 
              (file->lines f))))

(defun watch (fmt lst &optional b4 (n 0) &aux it)
  "Print a lst. Don't print cells that are unchanged
   from the same cell in the previous item in the list"
  (labels ((diff (x y) 
              "Only return x if it is different to y"
              (if (equalp x y) "." y))
           (report (lst)
              "Print one list"
              (format t fmt (if (> n 1)
                                (mapcar #'diff b4 lst)
                                lst))))
     (when-it (car lst)
              (report it)
              (watch fmt (cdr lst) it (1+ n)))))

(watch "~{~6,2f, ~}~%" 
       (mapcar #'str->lst (file->lines)))
